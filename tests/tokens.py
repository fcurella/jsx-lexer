from pygments.token import Token, Whitespace


TOKENS = [
    (Token.Keyword.Declaration, "const"),
    (Whitespace, " "),
    (Token.Name.Other, "isOldEnough"),
    (Whitespace, " "),
    (Token.Operator, "="),
    (Whitespace, " "),
    (Token.Punctuation, "("),
    (Token.Name.Other, "value"),
    (Token.Punctuation, ","),
    (Whitespace, " "),
    (Token.Name.Other, "ownProps"),
    (Token.Punctuation, ")"),
    (Whitespace, " "),
    (Token.Punctuation, "=>"),
    (Whitespace, " "),
    (Token.Punctuation, "{"),
    (Whitespace, "\n    "),
    (Token.Keyword, "if"),
    (Whitespace, " "),
    (Token.Punctuation, "("),
    (Token.Name.Builtin, "parseInt"),
    (Token.Punctuation, "("),
    (Token.Name.Other, "value"),
    (Token.Punctuation, ","),
    (Whitespace, " "),
    (Token.Literal.Number.Float, "10"),
    (Token.Punctuation, ")"),
    (Whitespace, " "),
    (Token.Operator, "<"),
    (Whitespace, " "),
    (Token.Literal.Number.Float, "14"),
    (Token.Punctuation, ")"),
    (Whitespace, " "),
    (Token.Punctuation, "{"),
    (Whitespace, "\n        "),
    (Token.Keyword, "return"),
    (Whitespace, " "),
    (Token.Literal.String.Double, '"Only 14yo and older can register to the site."'),
    (Whitespace, "\n    "),
    (Token.Punctuation, "}"),
    (Whitespace, "\n"),
    (Token.Punctuation, "}"),
    (Token.Punctuation, ";"),
    (Whitespace, "\n\n"),
    (Token.Comment.Single, "// functional component"),
    (Whitespace, "\n"),
    (Token.Keyword.Declaration, "const"),
    (Whitespace, " "),
    (Token.Name.Other, "BlogTitle"),
    (Whitespace, " "),
    (Token.Operator, "="),
    (Whitespace, " "),
    (Token.Punctuation, "("),
    (Token.Punctuation, "{"),
    (Whitespace, " "),
    (Token.Name.Other, "children"),
    (Whitespace, " "),
    (Token.Punctuation, "}"),
    (Token.Punctuation, ")"),
    (Whitespace, " "),
    (Token.Punctuation, "=>"),
    (Whitespace, " "),
    (Token.Punctuation, "("),
    (Whitespace, "\n  "),
    (Token.Punctuation, "<"),
    (Token.Name.Tag, "h3"),
    (Token.Punctuation, ">"),
    (Token.Punctuation, "{"),
    (Token.Name.Other, "children"),
    (Token.Punctuation, "}"),
    (Token.Punctuation, "<"),
    (Token.Punctuation, "/"),
    (Token.Name.Tag, "h3"),
    (Token.Punctuation, ">"),
    (Whitespace, "\n"),
    (Token.Punctuation, ")"),
    (Token.Punctuation, ";"),
    (Whitespace, "\n\n"),
    (Token.Comment.Single, "// class component"),
    (Whitespace, "\n"),
    (Token.Keyword.Declaration, "class"),
    (Whitespace, " "),
    (Token.Name.Other, "BlogPost"),
    (Whitespace, " "),
    (Token.Keyword, "extends"),
    (Whitespace, " "),
    (Token.Name.Other, "React"),
    (Token.Punctuation, "."),
    (Token.Name.Other, "Component"),
    (Whitespace, " "),
    (Token.Punctuation, "{"),
    (Whitespace, "\n  "),
    (Token.Name.Other, "renderTitle"),
    (Token.Punctuation, "("),
    (Token.Name.Other, "title"),
    (Token.Punctuation, ")"),
    (Whitespace, " "),
    (Token.Punctuation, "{"),
    (Whitespace, "\n    "),
    (Token.Keyword, "return"),
    (Whitespace, " "),
    (Token.Punctuation, "<"),
    (Token.Name.Tag, "BlogTitle"),
    (Token.Punctuation, ">"),
    (Token.Punctuation, "{"),
    (Token.Name.Other, "title"),
    (Token.Punctuation, "}"),
    (Token.Punctuation, "<"),
    (Token.Punctuation, "/"),
    (Token.Name.Tag, "BlogTitle"),
    (Token.Punctuation, ">"),
    (Whitespace, "\n  "),
    (Token.Punctuation, "}"),
    (Token.Punctuation, ";"),
    (Whitespace, "\n  "),
    (Token.Name.Other, "render"),
    (Token.Punctuation, "("),
    (Token.Punctuation, ")"),
    (Whitespace, " "),
    (Token.Punctuation, "{"),
    (Whitespace, "\n    "),
    (Token.Keyword, "return"),
    (Whitespace, " "),
    (Token.Punctuation, "("),
    (Whitespace, "\n    "),
    (Token.Punctuation, "<"),
    (Token.Name.Tag, "div"),
    (Token.Text, " "),
    (Token.Name.Attribute, "className"),
    (Token.Operator, "="),
    (Token.Literal.String, '"blog-body"'),
    (Token.Punctuation, ">"),
    (Whitespace, "\n      "),
    (Token.Punctuation, "{"),
    (Token.Keyword, "this"),
    (Token.Punctuation, "."),
    (Token.Name.Other, "renderTitle"),
    (Token.Punctuation, "("),
    (Token.Keyword, "this"),
    (Token.Punctuation, "."),
    (Token.Name.Other, "props"),
    (Token.Punctuation, "."),
    (Token.Name.Other, "title"),
    (Token.Punctuation, ")"),
    (Token.Punctuation, "}"),
    (Whitespace, "\n      "),
    (Token.Punctuation, "<"),
    (Token.Name.Tag, "p"),
    (Token.Punctuation, ">"),
    (Token.Punctuation, "{"),
    (Token.Keyword, "this"),
    (Token.Punctuation, "."),
    (Token.Name.Other, "props"),
    (Token.Punctuation, "."),
    (Token.Name.Other, "body"),
    (Token.Punctuation, "}"),
    (Token.Punctuation, "<"),
    (Token.Punctuation, "/"),
    (Token.Name.Tag, "p"),
    (Token.Punctuation, ">"),
    (Whitespace, "\n      "),
    (Token.Punctuation, "<"),
    (Token.Name.Tag, "CustomComponent"),
    (Token.Punctuation, ">"),
    (Token.Name.Other, "text"),
    (Token.Punctuation, "<"),
    (Token.Punctuation, "/"),
    (Token.Name.Tag, "CustomComponent"),
    (Token.Punctuation, ">"),
    (Whitespace, "\n      "),
    (Token.Punctuation, "<"),
    (Token.Name.Tag, "input"),
    (Token.Text, " "),
    (Token.Name.Attribute, "type"),
    (Token.Operator, "="),
    (Token.Literal.String, '"text"'),
    (Token.Text, " "),
    (Token.Punctuation, "{"),
    (Token.Name.Attribute, "...props.inputProps"),
    (Token.Punctuation, "}"),
    (Token.Text, " "),
    (Token.Punctuation, "/"),
    (Token.Punctuation, ">"),
    (Whitespace, "\n    "),
    (Token.Punctuation, "<"),
    (Token.Punctuation, "/"),
    (Token.Name.Tag, "div"),
    (Token.Punctuation, ">"),
    (Whitespace, "\n    "),
    (Token.Punctuation, ")"),
    (Token.Punctuation, ";"),
    (Whitespace, "\n  "),
    (Token.Punctuation, "}"),
    (Whitespace, "\n"),
    (Token.Punctuation, "}"),
    (Whitespace, "\n\n"),
    (Token.Keyword.Declaration, "const"),
    (Whitespace, " "),
    (Token.Name.Other, "body"),
    (Whitespace, " "),
    (Token.Operator, "="),
    (Whitespace, " "),
    (Token.Literal.String.Double, '"Hello World!"'),
    (Token.Punctuation, ";"),
    (Whitespace, "\n"),
    (Token.Keyword.Declaration, "const"),
    (Whitespace, " "),
    (Token.Name.Other, "blogNode"),
    (Whitespace, " "),
    (Token.Operator, "="),
    (Whitespace, " "),
    (Token.Punctuation, "<"),
    (Token.Name.Tag, "BlogPost"),
    (Token.Text, " "),
    (Token.Name.Attribute, "title"),
    (Token.Operator, "="),
    (Token.Literal.String, '"What\'s going on?"'),
    (Token.Text, " "),
    (Token.Name.Attribute, "body"),
    (Token.Operator, "="),
    (Token.Punctuation, "{"),
    (Token.Name.Other, "body"),
    (Token.Punctuation, "}"),
    (Token.Text, " "),
    (Token.Punctuation, "/"),
    (Token.Punctuation, ">"),
    (Token.Punctuation, ";"),
    (Whitespace, "\n"),
    (Token.Comment.Single, "// some comment. Tags shouldn't be lexed in here"),
    (Whitespace, "\n"),
    (Token.Comment.Single, '// <div class="blog-body">'),
    (Whitespace, "\n"),
    (Token.Comment.Single, "// <h3>What's going on?</h3>"),
    (Whitespace, "\n"),
    (Token.Comment.Single, "// <p>Hello World!</p>"),
    (Whitespace, "\n"),
    (Token.Comment.Single, "// </div>"),
    (Whitespace, "\n\n"),
    (
        Token.Comment.Multiline,
        "/*\n  Some comment. Tags shouldn't be lexed in here either\n  <div class=\"blog-body\">\n  <h3>What's going on?</h3>\n  <p>Hello World!</p>\n  </div>\n*/",
    ),
    (Whitespace, "\n\n"),
    (Token.Keyword.Declaration, "const"),
    (Whitespace, " "),
    (Token.Name.Other, "shortSyntaxfragmentEmptyBody"),
    (Whitespace, " "),
    (Token.Operator, "="),
    (Whitespace, " "),
    (Token.Punctuation, "<"),
    (Token.Punctuation, ">"),
    (Token.Punctuation, "<"),
    (Token.Punctuation, "/"),
    (Token.Punctuation, ">"),
    (Token.Punctuation, ";"),
    (Whitespace, "\n\n"),
    (Token.Keyword.Declaration, "const"),
    (Whitespace, " "),
    (Token.Name.Other, "shortSyntaxfragmentFullBody"),
    (Whitespace, " "),
    (Token.Operator, "="),
    (Whitespace, " "),
    (Token.Punctuation, "<"),
    (Token.Punctuation, ">"),
    (Token.Punctuation, "<"),
    (Token.Name.Tag, "div"),
    (Token.Punctuation, "/"),
    (Token.Punctuation, ">"),
    (Token.Punctuation, "<"),
    (Token.Punctuation, "/"),
    (Token.Punctuation, ">"),
    (Token.Punctuation, ";"),
    (Whitespace, "\n\n"),
    (Token.Keyword.Declaration, "const"),
    (Whitespace, " "),
    (Token.Name.Other, "reactDotFragment"),
    (Whitespace, " "),
    (Token.Operator, "="),
    (Whitespace, " "),
    (Token.Punctuation, "<"),
    (Token.Name.Tag, "React"),
    (Token.Punctuation, "."),
    (Token.Name.Attribute, "Fragment"),
    (Token.Punctuation, ">"),
    (Token.Punctuation, "<"),
    (Token.Name.Tag, "div"),
    (Token.Punctuation, "/"),
    (Token.Punctuation, ">"),
    (Token.Punctuation, "<"),
    (Token.Punctuation, "/"),
    (Token.Name.Tag, "React"),
    (Token.Punctuation, "."),
    (Token.Name.Attribute, "Fragment"),
    (Token.Punctuation, ">"),
    (Token.Punctuation, ";"),
    (Whitespace, "\n\n"),
    (Token.Keyword.Declaration, "const"),
    (Whitespace, " "),
    (Token.Name.Other, "reactDotContext"),
    (Whitespace, " "),
    (Token.Operator, "="),
    (Whitespace, " "),
    (Token.Punctuation, "<"),
    (Token.Name.Tag, "Context"),
    (Token.Punctuation, "."),
    (Token.Name.Attribute, "Provider"),
    (Token.Punctuation, ">"),
    (Token.Punctuation, "<"),
    (Token.Name.Tag, "div"),
    (Token.Punctuation, "/"),
    (Token.Punctuation, ">"),
    (Token.Punctuation, "<"),
    (Token.Punctuation, "/"),
    (Token.Name.Tag, "Context"),
    (Token.Punctuation, "."),
    (Token.Name.Attribute, "Provider"),
    (Token.Punctuation, ">"),
    (Token.Punctuation, ";"),
    (Whitespace, "\n\n"),
    (Token.Keyword.Declaration, "const"),
    (Whitespace, " "),
    (Token.Name.Other, "reactDotContextValue"),
    (Whitespace, " "),
    (Token.Operator, "="),
    (Whitespace, " "),
    (Token.Punctuation, "<"),
    (Token.Name.Tag, "Context"),
    (Token.Punctuation, "."),
    (Token.Name.Attribute, "Provider"),
    (Token.Text, " "),
    (Token.Name.Attribute, "value"),
    (Token.Operator, "="),
    (Token.Literal.String, '"Hello"'),
    (Token.Punctuation, ">"),
    (Token.Punctuation, "<"),
    (Token.Name.Tag, "div"),
    (Token.Punctuation, "/"),
    (Token.Punctuation, ">"),
    (Token.Punctuation, "<"),
    (Token.Punctuation, "/"),
    (Token.Name.Tag, "Context"),
    (Token.Punctuation, "."),
    (Token.Name.Attribute, "Provider"),
    (Token.Punctuation, ">"),
    (Token.Punctuation, ";"),
    (Whitespace, "\n"),
]
